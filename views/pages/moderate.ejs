<link rel="stylesheet" type="text/css" href="moderate.css">

<%- include ('./partials/mod_template') %>
<style>
    .bottom-bottom-right {
        background-color: rgba(0, 0, 0, 0.5);
        ;
        color: white;
        z-index: 10;
        position: absolute;
        top: 54%;
        right: 0%;
        font-family: "apercu";
        font-size: 1em;
        font-weight: normal;
    }

    #mobile-video {
        max-width: 75%;
        overflow-y: hidden;
        overflow-x: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
    }

    .filter-mobile,
    #button-addon2 {
        display: none;
    }

    @media (max-width: 500px) {
        .bottom-bottom-right {
            top: 51.5% !important;
        }
    }

    @media (max-width: 650px) {

        .filter-mobile,
        #button-addon2 {
            display: inline;
        }

        .filter {
            display: none !important;
        }


    }

    .page {
        display: none;
    }

    .page-active {
        display: block !important;
    }

    .jumbotron {
        padding: 0 !important;
        margin: 0 !important;
        background-color: rgba(0, 123, 255, 0) !important;
    }
</style>
    <div class="content">
        <div class="row">
            <div class="col-2">
                <div class="filter">
                    <form id="filters">
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" class="opt custom-control-input" id="animals">
                            <label class="custom-control-label" for="animals">
                                <p>Animals</p>
                            </label>
                        </div>
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" class="opt custom-control-input" id="family">
                            <label class="custom-control-label" for="family">
                                <p>Family</p>
                            </label>
                        </div>
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" class="opt custom-control-input" id="inspiring">
                            <label class="custom-control-label" for="inspiring">
                                <p>Inspiring</p>
                            </label>
                        </div>
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" class="opt custom-control-input" id="lovestory">
                            <label class="custom-control-label" for="lovestory">
                                <p>Love Story</p>
                            </label>
                        </div>
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" class="opt custom-control-input" id="other">
                            <label class="custom-control-label" for="other">
                                <p>Other</p>
                            </label>
                        </div>
                    </form>
                </div>
            </div>
            <div id="right-col" class="col-10">
                <form id="search-form">
                    <div class="search-bar p-1 bg-light rounded rounded-pill shadow mb-4"
                        style=" margin-left: 10%;margin-right: 10%;">
                        <div class="search-bar-inner input-group rounded rounded-pill">
                            <input id="search-id" type="search" placeholder="Search..." aria-describedby="button-addon1"
                                class="form-control border-0 bg-light rounded rounded-pill">
                            <div class="input-group-append rounded rounded-pill">
                                <button id="button-addon1" type="submit" style="color: #00bfdb;" class="btn"><i
                                        class="fa fa-search"></i></button>

                                <button onclick="changeChevron()" id="button-addon2" class="btn" style="color: #00bfdb;"
                                    data-toggle="collapse" data-target="#collapseFiltre"><i id="chevron"
                                        class="fas fa-chevron-circle-down"></i></button>

                            </div>
                        </div>
                    </div>
                </form>
                <div class="collapse" id="collapseFiltre">
                    <div class="filter-mobile">
                        <form id="filters-mobile">
                            <div class="custom-control custom-checkbox">
                                <input type="checkbox" class="opt-mobile custom-control-input" id="_animals">
                                <label class="custom-control-label" for="_animals">
                                    <p>Animals</p>
                                </label>
                            </div>
                            <div class="custom-control custom-checkbox">
                                <input type="checkbox" class="opt-mobile custom-control-input" id="_family">
                                <label class="custom-control-label" for="_family">
                                    <p>Family</p>
                                </label>
                            </div>
                            <div class="custom-control custom-checkbox">
                                <input type="checkbox" class="opt-mobile custom-control-input" id="_inspiring">
                                <label class="custom-control-label" for="_inspiring">
                                    <p>Inspiring</p>
                                </label>
                            </div>
                            <div class="custom-control custom-checkbox">
                                <input type="checkbox" class="opt-mobile custom-control-input" id="_lovestory">
                                <label class="custom-control-label" for="_lovestory">
                                    <p>Love Story</p>
                                </label>
                            </div>
                            <div class="custom-control custom-checkbox">
                                <input type="checkbox" class="opt-mobile custom-control-input" id="_other">
                                <label class="custom-control-label" for="_other">
                                    <p>Other</p>
                                </label>
                            </div>
                        </form>
                    </div>
                </div>
                <div id="_list" class="d-flex flex-column flex-nowrap">
                </div>
            </div>
        </div>
    </div>

    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>







    <script src="https://cdnjs.cloudflare.com/ajax/libs/twbs-pagination/1.4.2/jquery.twbsPagination.js"
        integrity="sha512-uzuo1GprrBscZGr+iQSv8+YQQsKY+rSHJju0FruVsGHV2CZNZPymW/4RkxoHxAxw3Lo5UQaxDMF8zINUfAsGeg=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
        var width = $(window).width(), height = $(window).height();
        let data = '<%- JSON.stringify(data) %>';
        let data_json = JSON.parse(data);
        let search = null;

        let _width = $(window).width();
        let page_size = 21;
        if (_width < 1401) {
            page_size = 14
        }
        if (_width < 851) {
            page_size = 7
        }
        let pages = Math.ceil(data_json.length / page_size)

        $("#search-form").submit(function (event) {
            let value = $("#search-id").val().trim();
            console.log(data_json);
            if (value) {
                search = value;
                data_json = data_json.filter(function (jsonObject) {
                    for (var key of Object.keys(jsonObject)) {
                        if (jsonObject[key] && jsonObject[key].toString().toLowerCase().includes(value.toString().toLowerCase())) {
                            console.log("contains");
                            return true
                        }
                    }
                    return false;
                });

                console.log(data_json);
                $("#_list").empty();
                loadAssets();
            } else {
                search = null;
            }
            event.preventDefault();
        });


        $('#filters').change(function () {
            let arr = [];

            $('input.opt:checkbox:checked').each(function () {
                arr.push($(this).attr("id"));
            });
            data_json = JSON.parse(data);
            console.log(arr.length)
            console.log(data_json)
            if (arr != 0) {
                data_json = data_json.filter(function (jsonObject) {
                    let i = 0;
                    if (!arr.includes('animals') && !arr.includes('family') && !arr.includes('inspiring') && !arr.includes('lovestory') && !arr.includes('other')) {
                        return true;
                    } else {
                        while (i != arr.length) {
                            if (jsonObject.tag == arr[i]) {
                                return true;
                            }
                            i++;
                        }
                    }

                    return false;
                });
            }
            console.log(data_json);
            $("#_list").empty();
            loadAssets();
        });


        $('#filters-mobile').change(function () {
            console.log("change")
            let arr = [];

            let feature = $('#_featured').is(":checked");
            let notfeature = $('#_notfeatured').is(":checked");
            $('input.opt-mobile:checkbox:checked').each(function () {
                arr.push($(this).attr("id"));
            });

            data_json = JSON.parse(data);
            if (arr != 0) {
                arr = arr.map(s => s.slice(1));
                data_json = data_json.filter(function (jsonObject) {
                    let i = 0;
                    if (!arr.includes('animals') && !arr.includes('family') && !arr.includes('inspiring') && !arr.includes('lovestory') && !arr.includes('other')) {
                        return true;
                    } else {
                        while (i != arr.length) {
                            if (jsonObject.tag == arr[i]) {
                                return true;
                            }
                            i++;
                        }
                    }

                    return false;
                });
            }
            $("#_list").empty();
            loadAssets();
        });


        function changeChevron() {
            if ($("#chevron").attr('class') == "fas fa-chevron-circle-down") {
                $("#chevron").removeClass('fas fa-chevron-circle-down');
                $("#chevron").addClass('fas fa-chevron-circle-up');
            } else {
                $("#chevron").removeClass('fas fa-chevron-circle-up');
                $("#chevron").addClass('fas fa-chevron-circle-down');
            }
        }

        function loadAssets() {
            let support = "#template";
            let width = $(window).width();
            let counter_max = 3;
            let counter = 0;
            if (width < 1401) {
                counter_max = 2;
            }
            if (width < 851) {
                counter_max = 1;
            }
            if (width < 651) {
                support = "#template";
                $('#right-col').removeClass('col-10');
                $('#right-col').addClass('col-12');
            } else {
                $('#right-col').removeClass('col-12');
                $('#right-col').addClass('col-10');
            }

            let card_counter = 1;
            let deck_counter = 1;

            let list = $("#_list");

            let new_deck = $("<div>", { id: deck_counter, "class": "card-deck" });
            deck_counter++;

            list.append(new_deck);
            jQuery.each(data_json, function (i, val) {
                console.log(counter);
                console.log(counter_max)
                if (counter == counter_max) {
                    new_deck = $("<div>", { id: deck_counter, "class": "card-deck" });
                    deck_counter++;

                    list.append(new_deck);
                    counter = 0;
                }
                template = $(support.toString()).clone();
                template.attr("id", val.id);
                template.find("img").attr('src', "image?storage=" + val.storage + '&video=video' + val.ext);
                template.find("h4").text(val.vname)
                template.find("p").text(val.fname + "  " + val.lname)
                template.find("#type").find("i").text(val.tag.charAt(0).toUpperCase() + val.tag.slice(1))
                template.find("#date").text(val.date)
                template.find("#city").text(val.city)
                template.find("#mobile-video").text(val.vname)
                template.find("#mobile-name").text(val.fname + "  " + val.lname)
                template.find("#video-time").text((val.time > 3600) ? new Date(val.time * 1000).toISOString().substr(11, 8) : new Date(val.time * 1000).toISOString().substr(14, 5))
                template.find("#mobile-date").text(val.date)
                template.find("#action").find("#add").attr("onclick", "myValidate('" + val.id + "');");
                template.find("#action").find("#remove").attr("onclick", "myDelete('" + val.id + "');");
                if (val.posted == 1) {
                    template.find('#tiktok-off').attr("id", "tiktok-on");
                }
                template.find("#image").attr("onclick", "window.open('watch?id=" + val.id + "');");
                template.removeAttr('hidden');
                template.appendTo(`#${deck_counter - 1}`);
                counter++;
            });
            while (counter < counter_max) {
                template = $("#empty_template").clone();
                template.removeAttr('hidden');
                template.appendTo(`#${deck_counter - 1}`);
                counter++;
            }
        }

        $(window).on('resize', function () {
            if ($(window).width() != width) {
                $("#_list").empty();
                loadAssets();
            }
        });

        $(document).ready(function () {
            loadAssets();
        });



    </script>
















    <script>
        function myDelete(id) {
            swal({
                title: "Are you sure?",
                text: "Once removed, you will not be able to recover it!",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            }).then((willDelete) => {
                if (willDelete) {
                    var data = {
                        ID: id
                    };
                    var json = JSON.stringify(data);
                    var xhr = new XMLHttpRequest();
                    xhr.open("POST", "/moderate/refuse/");
                    xhr.setRequestHeader("Content-Type", "application/json");
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState === 4) {
                            swal("The data has been removed!", {
                                icon: "success",
                            }).then((willDelete) => {
                                document.location.reload();
                            });
                        }
                    }
                    xhr.send(json);
                } else {
                    swal("Operation dropped", {
                        icon: "info",
                    });
                }
            });
        }
        function myValidate(id) {
            swal({
                title: "Are you sure?",
                text: "Do you want to accept this video?",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {
                        var data = {
                            ID: id
                        };
                        var json = JSON.stringify(data);
                        var xhr = new XMLHttpRequest();
                        xhr.open("POST", "/moderate/accept/");
                        xhr.setRequestHeader("Content-Type", "application/json");
                        xhr.onreadystatechange = function () {
                            if (xhr.readyState === 4) {
                                swal("The video has been added", {
                                    icon: "success",
                                }).then((willDelete) => {
                                    document.location.reload();
                                });
                            }
                        }
                        xhr.send(json);
                    } else {
                        swal("Operation dropped", {
                            icon: "info",
                        });
                    }
                });
        }

        // var card_counter = 1;
        // var deck_counter = 1;
        // var counter = -1;
        // var data = '<%- JSON.stringify(data) %>';
        // var data_json = JSON.parse(data);

        // var list = $("#_list");


        // var new_deck = $("<div>", { id: deck_counter, "class": "card-deck" });
        // deck_counter++;

        // list.append(new_deck);
        // jQuery.each(data_json, function (i, val) {
        //     counter++;
        //     if (counter == 3) {
        //         new_deck = $("<div>", { id: deck_counter, "class": "card-deck" });
        //         deck_counter++;
        //         list.append(new_deck);
        //         counter = 0;
        //     }
        //     template = $("#template").clone();
        //     template.attr("id", "card" + card_counter);
        //     template.find("img").attr('src', "image?storage=" + val.storage + '&video=video' + val.ext);
        //     template.find("h4").text(val.vname)
        //     template.find("p").text(val.fname + "  " + val.lname)
        //     template.find("#type").find("i").text(val.tag)
        //     template.find("#city").text(val.date + " - " + val.city)
        //     template.find("#action").find("#add").attr("onclick", "myValidate('" + val.id + "');");
        //     template.find("#action").find("#remove").attr("onclick", "myDelete('" + val.id + "');");
        //     template.find("#image").attr("onclick", "window.open('watch?id=" + val.id + "');");
        //     template.removeAttr('hidden');
        //     template.appendTo(`#${deck_counter - 1}`);
        //     card_counter++;
        // });

        // while (counter < 2) {
        //     console.log("add 1");
        //     template = $("#empty_template").clone();
        //     template.removeAttr('hidden');
        //     template.appendTo(`#${deck_counter - 1}`);
        //     counter++;
        // }
    </script>